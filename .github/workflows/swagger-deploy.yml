name: Deploy Swagger Docs to GitHub Pages

on:
  push:
    branches:
      - main
      - dev
      - feat/swagger-action # 테스트용 브랜치
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # 빌드 및 정적 파일 생성 작업
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          # server 디렉토리의 package-lock.json을 캐시 키로 사용
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        # server 디렉토리에서 npm install 실행
        run: npm install
        working-directory: ./server

      - name: Generate Swagger JSON
        # server 디렉토리에서 스크립트 실행
        run: npm run export:swagger
        working-directory: ./server

      - name: Prepare Swagger UI
        # server 디렉토리에서 스크립트 실행
        run: npm run swagger:ui:prepare
        working-directory: ./server

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # server 디렉토리 내에 생성된 swagger-ui 폴더를 업로드
          path: ./server/swagger-ui

  # GitHub Pages 배포 작업
  deploy:
    needs: build # build 작업이 끝난 후 실행
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
