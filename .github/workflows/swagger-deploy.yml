name: Deploy Swagger UI to GitHub Pages

on:
  push:
    branches: [ dev, main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

# GitHub Pages 배포를 위한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 배포 방지
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: 18

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: server/package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        working-directory: server
        run: |
          npm ci
          npm install swagger-ui-dist --no-save

      - name: Generate Swagger JSON
        working-directory: server
        run: npm run export:swagger
        env:
          NODE_ENV: production

      - name: Prepare Swagger UI
        working-directory: server
        run: npm run swagger:ui:prepare

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: server/swagger-ui
          name: github-pages
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages

      - name: Display deployment info
        run: |
          echo "🚀 Swagger UI deployed successfully!"
          echo "📖 Documentation URL: ${{ steps.deployment.outputs.page_url }}"
